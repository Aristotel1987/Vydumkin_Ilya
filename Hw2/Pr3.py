import numpy as np
n=int(input('Введите количество строк в матрице'))
m=[] #Вводим список, в который  будем добавлять списки строк
for i in range(n): # заполняем матрицу значениями вводимыми с клавиатуры
    m.append([int(input(f'Введите элемент {j+1} из строки {i+1} матрицы')) for j in range(n)])
def determ(m: list[list[int]]): #Для подсчета определителя с помощью разложения по строке введем функцию, так как нам понадоюится внутренняя рекурсия
    l = len(m) # определяем  размерность
    det = 0 # вводим определитель
    if l == 1 :# если матрица состоит из 1 числа
        return m[0][0] # то это число и есть определитель
    else: # иначе разлагаем матрицу по первой строк, умножая элемент из 1ой строки на определитель подматрицы без первой строки и без столбца этого элемента, с соответствующим знаком.
        for k in range(l): # bитерируемся по строке, используем списочное выражение для сборки матрицы  из 2х подматриц
            det += m[0][k] * (-1) ** k * determ([m[i][:k] + m[i][k + 1:] for i in range(1, l)]) #для сборки подматрицы используем списочное выражение со срезом внутри 
        return det # общий определитель есть сумма произведений элементов первой строки на определители подматриц, с чередующимся знаком
print('Определитель матрицы составляет:', determ(m))
print('Определитель, рассчитанный при помощи библиотеки numpy, равен:', round(np.linalg.det(m), 1))
